---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform AWS Transit Gateway

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-transit-gateway

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-transit-gateway.svg"
    url: "https://github.com/clouddrove/terraform-aws-transit-gateway/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-transit-gateway/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-transit-gateway/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

prerequesties:
  - name: Terraform 1.5.6
    url: https://learn.hashicorp.com/terraform/getting-started/install.html

#  description of this project
description: |-
  Terraform module which creates Transit Gateway, Resource Association, Principal Association, Resource Share, Transit Gateway VPC Attachment on AWS.

# extra content
include:
  - "terraform.md"

# How to use this project
usage : |-
  Here are some examples of how you can use this module in your inventory structure:

  ### Transit Gateway For Single Account
  ```hcl
  module "transit-gateway" {
    depends_on                      = [module.vpc, module.subnets]
    source                          = "./../../"
    name                            = "app"
    environment                     = "test"
    tgw_create                      = true
    amazon_side_asn                 = 64512
    auto_accept_shared_attachments  = "enable"
    default_route_table_propagation = "enable"
    description                     = "This transit Gateway create for testing purpose"
    #TGW Share
    resource_share_enable                    = true
    resource_share_allow_external_principals = true
    resource_share_account_ids               = ["xxxxxxxxxxxx"]
    # VPC Attachements
    vpc_attachments = {
      vpc1 = {
        vpc_id                                          = module.vpc.vpc_id
        subnet_ids                                      = module.subnets.public_subnet_id
        transit_gateway_default_route_table_association = true
        transit_gateway_default_route_table_propagation = true
        # Below should be uncommented only when vpc and subnet are already deployed.
        #vpc_route_table_ids                             = module.subnets.public_route_tables_id
        #destination_cidr                                = ["10.11.0.0/16"]
      },
      vpc2 = {
        vpc_id                                          = module.vpc_other.vpc_id
        subnet_ids                                      = module.subnets_other.public_subnet_id
        transit_gateway_default_route_table_association = false
        transit_gateway_default_route_table_propagation = false
        # Below should be uncommented only when vpc and subnet are already deployed.
        #vpc_route_table_ids                             = module.subnets_other.public_route_tables_id
        #destination_cidr                                = ["31.0.0.0/16", "53.0.0.0/16"]
      }
    }
  }
  ```

  ### Transit Gateway for Multi AWS Account
  ```hcl
  module "transit_gateway" {
    depends_on  = [module.vpc, module.subnets]
    source      = "./../../"
    name        = "app"
    environment = "test"
    tgw_create  = false
    #TGW Share
    aws_ram_resource_share_accepter = true
    resource_share_arn              = "arn:aws:ram:eu-west-1:xxxxxxxxxx:resource-share/xxxxxxxxxxxxxxxxxxxxxxxxxx"
    # VPC Attachements
    transit_gateway_id = "tgw-xxxxxxxxxxx"
    vpc_attachments = {
      vpc1 = {
        vpc_id                                          = module.vpc.vpc_id
        subnet_ids                                      = module.subnets.public_subnet_id
        transit_gateway_default_route_table_association = true
        transit_gateway_default_route_table_propagation = true
        # Below should be uncommented only when vpc and subnet are already deployed.
        #vpc_route_table_ids                             = module.subnets.public_route_tables_id
        #destination_cidr                                = ["10.10.0.0/16"]
      } 
    }
  }
  ```
